<?php/********************************************************************THIS IS STRICTLY EXAMPLE SOURCE CODE. IT IS ONLY MEANT TOQUICKLY DEMONSTRATE THE CONCEPT AND THE USAGE OF THE ADAPTIVEPAYMENTS API. PLEASE NOTE THAT THIS IS *NOT* PRODUCTION-QUALITYCODE AND SHOULD NOT BE USED AS SUCH.THIS EXAMPLE CODE IS PROVIDED TO YOU ONLY ON AN "AS IS"BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHEREXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY WARRANTIESOR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY ORFITNESS FOR A PARTICULAR PURPOSE. PAYPAL MAKES NO WARRANTY THATTHE SOFTWARE OR DOCUMENTATION WILL BE ERROR-FREE. IN NO EVENTSHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANYDIRECT, INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, ORCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENTOF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OFLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OFTHE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITYOF SUCH DAMAGE.IMPORTANT:When you integrate this code look for TODO as an indication that you may need to provide a value or take action before executing this code.*******************************************************************INSTRUCTIONS1) Ensure that SSL and fopen() are enabled in the php.ini file2) Written and Tested with PHP 5.3.0*/echo "Starting Pay Operation...";//turn php errors onini_set("track_errors", true);//set PayPal Endpoint to sandbox$url = trim("https://svcs.sandbox.paypal.com/AdaptivePayments/Pay");/********************************************************************PayPal API CredentialsReplace API_USERNAME with your API UsernameReplace API_PASSWORD with your API PasswordReplace API_SIGNATURE with your Signature********************************************************************///PayPal API Credentials$API_UserName		= "caller_1303245875_biz_api1.yahoo.com"; //TODO$API_Password		= "1303245887"; //TODO$API_Signature		= "AWGg0IlutB9b.mxXKrxs3FaaUv.nA.ANfIK9qkp06BDMloUHL3JD9ki6"; //TODO	//Default App ID for Sandbox	$API_AppID			= "APP-80W284485P519543T";//Request/Response Format$API_RequestFormat	= "NV";$API_ResponseFormat	= "NV";//Transaction Parameters	$receiver			= "rec1_1303245987_biz@yahoo.com";$amount				= "10.00";//Create request payload with minimum required parameters$bodyParams = array (							"actionType" 						=> "PAY",						"currencyCode" 						=> "USD",						"receiverList.receiver(0).email" 	=> $receiver,						"receiverList.receiver(0).amount" 	=> $amount,						"returnUrl" 						=> "http://www.example.com/success.html",						"cancelUrl" 						=> "http://www.example.com/failure.html",						"requestEnvelope.errorLanguage" 	=> "en_US",					);											// convert payload array into url encoded query string$bodyData = http_build_query($bodyParams, "", chr(38));try{	//************************************	//**  Set up HTTP request to PayPal **	//************************************		echo "<strong>Done</strong><br>Setting up parameters...";		//create request and add headers	$request = array("http" => array( 									 "method"  => "POST",									 "content" => $bodyData,									 "header"  => "X-PAYPAL-SECURITY-USERID: "		. $API_UserName			. "\r\n" .												  "X-PAYPAL-SECURITY-SIGNATURE: "	. $API_Signature		. "\r\n" .												  "X-PAYPAL-SECURITY-PASSWORD: "	. $API_Password			. "\r\n" .												  "X-PAYPAL-APPLICATION-ID: "		. $API_AppID			. "\r\n" .												  "X-PAYPAL-REQUEST-DATA-FORMAT: "	. $API_RequestFormat	. "\r\n" .												  "X-PAYPAL-RESPONSE-DATA-FORMAT: "	. $API_ResponseFormat	. "\r\n" 									)					);	//create stream context	$ctx = stream_context_create($request);	 	 	echo "<strong>Done</strong><br>Sending information to PayPal..."; 	//open the stream and send request	$fp = @fopen($url, "r", false, $ctx);	if (!$fp) {			echo "Error establishing connection.";		} 	//get response	$response = stream_get_contents($fp);	//check to see if stream is open	if ($response == false) {		throw new Exception("php error message = " . "$php_errormsg");	}	//close the stream	fclose($fp);	//parse the ap key from the response	$keyArray = explode("&", $response);	//Display the paypal response	echo "<strong>Done</strong><br><br>Response from PayPal: <br><br>";	foreach ($keyArray as $rVal){		list($qKey, $qVal) = explode ("=", $rVal);			$responseParameters[$qKey] = urldecode($qVal);			echo $qKey." = <b>".urldecode($qVal)."</b><br>";				}	echo "<br>";		//************************************	//**  Analyze response and redirect **	//**        user to PayPal          **	//************************************		//Check to see if the request was sucessful.	if ( $responseParameters["responseEnvelope.ack"] == "Success") {			//set url to approve the transaction		$payPalURL = "https://www.sandbox.paypal.com/webscr?cmd=_ap-payment&paykey=" . $responseParameters["payKey"];		//The user must be sent to paypal to approve the transaction. This redirection is tipically done		//automatically. But for testing purposes, we will display the URL, as a link. It must be clicked by hand.		//If you would like to redirect the user to PayPal automatically, simply uncomment the following block	 /*	header("Location:".  $payPalURL);	exit;	  */		echo 'Transaction Created. Click below to redirect to PayPal so that payment can be approved.<br><a href="' . $payPalURL . '" target="_blank">' . $payPalURL . '</a>';	}	else {		echo 'ERROR Code: ' .  $responseParameters["error(0).errorId"] . " <br/>";		echo 'ERROR Message: ' .  $kArray["error(0).message"] . " <br/>";	}}catch(Exception $e) {	echo "Message: ||" .$e->getMessage()."||";	}?>